{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2021-32696",
      "ASSIGNER": "security-advisories@github.com"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-843"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://github.com/ericnorris/striptags/commit/f252a6b0819499cd65403707ebaf5cc925f2faca",
          "name": "https://github.com/ericnorris/striptags/commit/f252a6b0819499cd65403707ebaf5cc925f2faca",
          "refsource": "MISC",
          "tags": [
            "Patch",
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://www.npmjs.com/package/striptags",
          "name": "https://www.npmjs.com/package/striptags",
          "refsource": "MISC",
          "tags": [
            "Product",
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://github.com/ericnorris/striptags/security/advisories/GHSA-qxg5-2qff-p49r",
          "name": "https://github.com/ericnorris/striptags/security/advisories/GHSA-qxg5-2qff-p49r",
          "refsource": "CONFIRM",
          "tags": [
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://github.com/ericnorris/striptags/releases/tag/v3.2.0",
          "name": "https://github.com/ericnorris/striptags/releases/tag/v3.2.0",
          "refsource": "MISC",
          "tags": [
            "Third Party Advisory"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "The npm package \"striptags\" is an implementation of PHP's strip_tags in Typescript. In striptags before version 3.2.0, a type-confusion vulnerability can cause `striptags` to concatenate unsanitized strings when an array-like object is passed in as the `html` parameter. This can be abused by an attacker who can control the shape of their input, e.g. if query parameters are passed directly into the function. This can lead to a XSS."
        }
      ]
    }
  },
  "configurations": {
    "nodes": [
      {
        "operator": "OR",
        "cpe_match": [
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:striptags_project:striptags:*:*:*:*:*:node.js:*:*"
          }
        ]
      }
    ]
  },
  "impact": {
    "baseMetricV2": {
      "cvssV2": {
        "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "NONE",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "NONE",
        "baseScore": 5
      },
      "severity": "MEDIUM",
      "exploitabilityScore": 10,
      "impactScore": 2.9,
      "obtainAllPrivilege": false,
      "obtainUserPrivilege": false,
      "obtainOtherPrivilege": false,
      "userInteractionRequired": false
    }
  },
  "publishedDate": "2021-06-18T20:15Z",
  "lastModifiedDate": "2021-06-24T19:20Z"
}