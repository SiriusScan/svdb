{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2023-41327",
      "ASSIGNER": "security-advisories@github.com"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-918"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15",
          "name": "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15",
          "refsource": "MISC",
          "tags": [
            "Release Notes"
          ]
        },
        {
          "url": "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses",
          "name": "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses",
          "refsource": "MISC",
          "tags": [
            "Patch"
          ]
        },
        {
          "url": "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7",
          "name": "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7",
          "refsource": "MISC",
          "tags": [
            "Vendor Advisory"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "WireMock is a tool for mocking HTTP services. WireMock can be configured to only permit proxying (and therefore recording) to certain addresses. This is achieved via a list of allowed address rules and a list of denied address rules, where the allowed list is evaluated first. \n\nUntil WireMock Webhooks Extension 3.0.0-beta-15, the filtering of target addresses from the proxy mode DID NOT work for Webhooks, so the users were potentially vulnerable regardless of the `limitProxyTargets` settings. Via the WireMock webhooks configuration, POST requests from a webhook might be forwarded to an arbitrary service reachable from WireMockâ€™s instance. For example, If someone is running the WireMock docker Container inside a private cluster, they can trigger internal POST requests against unsecured APIs or even against secure ones by passing a token, discovered using another exploit, via authentication headers. This issue has been addressed in versions 2.35.1 and 3.0.3 of wiremock. Wiremock studio has been discontinued and will not see a fix. Users unable to upgrade should use external firewall rules to define the list of permitted destinations."
        }
      ]
    }
  },
  "configurations": {
    "nodes": [
      {
        "operator": "OR",
        "cpe_match": [
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:wiremock:studio:*:*:*:*:*:*:*:*"
          },
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:wiremock:wiremock:*:*:*:*:*:*:*:*"
          },
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:wiremock:wiremock:*:*:*:*:*:*:*:*"
          }
        ]
      }
    ]
  },
  "impact": {
    "baseMetricV2": {
      "cvssV2": {
        "vectorString": "",
        "accessVector": "",
        "accessComplexity": "",
        "authentication": "",
        "confidentialityImpact": "",
        "integrityImpact": "",
        "availabilityImpact": "",
        "baseScore": 0
      },
      "severity": "",
      "exploitabilityScore": 0,
      "impactScore": 0,
      "obtainAllPrivilege": false,
      "obtainUserPrivilege": false,
      "obtainOtherPrivilege": false,
      "userInteractionRequired": false
    }
  },
  "publishedDate": "2023-09-06T21:15Z",
  "lastModifiedDate": "2023-09-12T20:43Z"
}