{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2023-28448",
      "ASSIGNER": "security-advisories@github.com"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-125"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://github.com/firecracker-microvm/versionize/pull/53",
          "name": "https://github.com/firecracker-microvm/versionize/pull/53",
          "refsource": "MISC",
          "tags": [
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://github.com/firecracker-microvm/versionize/commit/a57a051ba006cfa3b41a0532f484df759e008d47",
          "name": "https://github.com/firecracker-microvm/versionize/commit/a57a051ba006cfa3b41a0532f484df759e008d47",
          "refsource": "MISC",
          "tags": [
            "Patch",
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://github.com/firecracker-microvm/versionize/security/advisories/GHSA-8vxc-r5wp-vgvc",
          "name": "https://github.com/firecracker-microvm/versionize/security/advisories/GHSA-8vxc-r5wp-vgvc",
          "refsource": "MISC",
          "tags": [
            "Third Party Advisory"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "Versionize is a framework for version tolerant serializion/deserialization of Rust data structures, designed for usecases that need fast deserialization times and minimal size overhead. An issue was discovered in the ‘Versionize::deserialize’ implementation provided by the ‘versionize’ crate for ‘vmm_sys_utils::fam::FamStructWrapper', which can lead to out of bounds memory accesses. The impact started with version 0.1.1. The issue was corrected in version 0.1.10 by inserting a check that verifies, for any deserialized header, the lengths of compared flexible arrays are equal and aborting deserialization otherwise.\n"
        }
      ]
    }
  },
  "configurations": {
    "nodes": [
      {
        "operator": "OR",
        "cpe_match": [
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:versionize_project:versionize:*:*:*:*:*:rust:*:*"
          }
        ]
      }
    ]
  },
  "impact": {
    "baseMetricV2": {
      "cvssV2": {
        "vectorString": "",
        "accessVector": "",
        "accessComplexity": "",
        "authentication": "",
        "confidentialityImpact": "",
        "integrityImpact": "",
        "availabilityImpact": "",
        "baseScore": 0
      },
      "severity": "",
      "exploitabilityScore": 0,
      "impactScore": 0,
      "obtainAllPrivilege": false,
      "obtainUserPrivilege": false,
      "obtainOtherPrivilege": false,
      "userInteractionRequired": false
    }
  },
  "publishedDate": "2023-03-24T20:15Z",
  "lastModifiedDate": "2023-11-07T04:10Z"
}