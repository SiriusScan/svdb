{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2020-15593",
      "ASSIGNER": "cve@mitre.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "NVD-CWE-noinfo"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://sec-consult.com/en/blog/advisories/privilege-escalation-vulnerability-in-steelcentral-aternity-agent-cve-2020-15592-cve-2020-15593/",
          "name": "https://sec-consult.com/en/blog/advisories/privilege-escalation-vulnerability-in-steelcentral-aternity-agent-cve-2020-15592-cve-2020-15593/",
          "refsource": "MISC",
          "tags": [
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://aternity.force.com/customersuccess/s/article/Recorder-tool-security-notification-mitigation-steps-for-On-Prem",
          "name": "https://aternity.force.com/customersuccess/s/article/Recorder-tool-security-notification-mitigation-steps-for-On-Prem",
          "refsource": "CONFIRM",
          "tags": [
            "Permissions Required",
            "Third Party Advisory"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "SteelCentral Aternity Agent 11.0.0.120 on Windows mishandles IPC. It uses an executable running as a high privileged Windows service to perform administrative tasks and collect data from other processes. It distributes functionality among different processes and uses IPC (Inter-Process Communication) primitives to enable the processes to cooperate. Any user in the system is allowed to access the interprocess communication channel AternityAgentAssistantIpc, retrieve a serialized object and call object methods remotely. Among others, the methods allow any user to: (1) Create and/or overwrite arbitrary XML files across the system; (2) Create arbitrary directories across the system; and (3) Load arbitrary plugins (i.e., C# assemblies) from the \"%PROGRAMFILES(X86)/Aternity Information Systems/Assistant/plugins‚Äù directory and execute code contained in them."
        }
      ]
    }
  },
  "configurations": {
    "nodes": [
      {
        "operator": "AND",
        "cpe_match": []
      }
    ]
  },
  "impact": {
    "baseMetricV2": {
      "cvssV2": {
        "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
        "accessVector": "LOCAL",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "COMPLETE",
        "integrityImpact": "COMPLETE",
        "availabilityImpact": "COMPLETE",
        "baseScore": 7.2
      },
      "severity": "HIGH",
      "exploitabilityScore": 3.9,
      "impactScore": 10,
      "obtainAllPrivilege": false,
      "obtainUserPrivilege": false,
      "obtainOtherPrivilege": false,
      "userInteractionRequired": false
    }
  },
  "publishedDate": "2020-07-27T14:15Z",
  "lastModifiedDate": "2021-07-21T11:39Z"
}