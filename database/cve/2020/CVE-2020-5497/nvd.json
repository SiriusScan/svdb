{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2020-5497",
      "ASSIGNER": "cve@mitre.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-79"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server/issues/1521",
          "name": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server/issues/1521",
          "refsource": "MISC",
          "tags": [
            "Exploit",
            "Issue Tracking",
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://www.securitymetrics.com/blog/MITREid-Connect-cross-site-scripting-CVE-2020-5497",
          "name": "https://www.securitymetrics.com/blog/MITREid-Connect-cross-site-scripting-CVE-2020-5497",
          "refsource": "MISC",
          "tags": [
            "Exploit",
            "Third Party Advisory"
          ]
        },
        {
          "url": "http://seclists.org/fulldisclosure/2020/Feb/25",
          "name": "20200227 CVE-2020-5497 - MITREid Connect XSS",
          "refsource": "FULLDISC",
          "tags": [
            "Mailing List",
            "Third Party Advisory"
          ]
        },
        {
          "url": "http://packetstormsecurity.com/files/156574/MITREid-1.3.3-Cross-Site-Scripting.html",
          "name": "http://packetstormsecurity.com/files/156574/MITREid-1.3.3-Cross-Site-Scripting.html",
          "refsource": "MISC",
          "tags": [
            "Exploit",
            "Third Party Advisory",
            "VDB Entry"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "The OpenID Connect reference implementation for MITREid Connect through 1.3.3 allows XSS due to userInfoJson being included in the page unsanitized. This is related to header.tag. The issue can be exploited to execute arbitrary JavaScript."
        }
      ]
    }
  },
  "configurations": {
    "nodes": [
      {
        "operator": "OR",
        "cpe_match": [
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:mitreid:connect:*:*:*:*:*:*:*:*"
          }
        ]
      }
    ]
  },
  "impact": {
    "baseMetricV2": {
      "cvssV2": {
        "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
        "accessVector": "NETWORK",
        "accessComplexity": "MEDIUM",
        "authentication": "NONE",
        "confidentialityImpact": "NONE",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "NONE",
        "baseScore": 4.3
      },
      "severity": "MEDIUM",
      "exploitabilityScore": 8.6,
      "impactScore": 2.9,
      "obtainAllPrivilege": false,
      "obtainUserPrivilege": false,
      "obtainOtherPrivilege": false,
      "userInteractionRequired": true
    }
  },
  "publishedDate": "2020-01-04T03:15Z",
  "lastModifiedDate": "2023-01-24T01:59Z"
}