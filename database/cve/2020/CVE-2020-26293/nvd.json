{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2020-26293",
      "ASSIGNER": "security-advisories@github.com"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-79"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://github.com/mganss/HtmlSanitizer/security/advisories/GHSA-8j9v-h2vp-2hhv",
          "name": "https://github.com/mganss/HtmlSanitizer/security/advisories/GHSA-8j9v-h2vp-2hhv",
          "refsource": "CONFIRM",
          "tags": [
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://github.com/mganss/HtmlSanitizer/commit/a3a7602a44d4155d51ec0fbbedc2a49e9c7e2eb8",
          "name": "https://github.com/mganss/HtmlSanitizer/commit/a3a7602a44d4155d51ec0fbbedc2a49e9c7e2eb8",
          "refsource": "MISC",
          "tags": [
            "Patch",
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://github.com/mganss/HtmlSanitizer/releases/tag/v5.0.372",
          "name": "https://github.com/mganss/HtmlSanitizer/releases/tag/v5.0.372",
          "refsource": "MISC",
          "tags": [
            "Release Notes",
            "Third Party Advisory"
          ]
        },
        {
          "url": "https://www.nuget.org/packages/HtmlSanitizer/",
          "name": "https://www.nuget.org/packages/HtmlSanitizer/",
          "refsource": "MISC",
          "tags": [
            "Product",
            "Third Party Advisory"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "HtmlSanitizer is a .NET library for cleaning HTML fragments and documents from constructs that can lead to XSS attacks. In HtmlSanitizer before version 5.0.372, there is a possible XSS bypass if style tag is allowed. If you have explicitly allowed the `\u003cstyle\u003e` tag, an attacker could craft HTML that includes script after passing through the sanitizer. The default settings disallow the `\u003cstyle\u003e` tag so there is no risk if you have not explicitly allowed the `\u003cstyle\u003e` tag. The problem has been fixed in version 5.0.372."
        }
      ]
    }
  },
  "configurations": {
    "nodes": [
      {
        "operator": "OR",
        "cpe_match": [
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:htmlsanitizer_project:htmlsanitizer:*:*:*:*:*:*:*:*"
          }
        ]
      }
    ]
  },
  "impact": {
    "baseMetricV2": {
      "cvssV2": {
        "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
        "accessVector": "NETWORK",
        "accessComplexity": "MEDIUM",
        "authentication": "NONE",
        "confidentialityImpact": "NONE",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "NONE",
        "baseScore": 4.3
      },
      "severity": "MEDIUM",
      "exploitabilityScore": 8.6,
      "impactScore": 2.9,
      "obtainAllPrivilege": false,
      "obtainUserPrivilege": false,
      "obtainOtherPrivilege": false,
      "userInteractionRequired": true
    }
  },
  "publishedDate": "2021-01-04T19:15Z",
  "lastModifiedDate": "2021-01-07T20:29Z"
}